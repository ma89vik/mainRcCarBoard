/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Wed Apr 10 11:45:02 2019. */

#ifndef PB_CMDS_PB_H_INCLUDED
#define PB_CMDS_PB_H_INCLUDED
#include <pb.h>

#include "state.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CmdType {
    CmdType_STOP = 0
} CmdType;
#define _CmdType_MIN CmdType_STOP
#define _CmdType_MAX CmdType_STOP
#define _CmdType_ARRAYSIZE ((CmdType)(CmdType_STOP+1))

/* Struct definitions */
typedef struct _BasicCmd {
    CmdType basicCmd;
/* @@protoc_insertion_point(struct:BasicCmd) */
} BasicCmd;

typedef struct _DebugCmd {
    int32_t debugCmd;
/* @@protoc_insertion_point(struct:DebugCmd) */
} DebugCmd;

typedef struct _ManualControlCmds {
    int32_t steeringSetPoint;
    int32_t speedSetPoint;
    CarState setCarState;
    CmdType BasicCmd;
/* @@protoc_insertion_point(struct:ManualControlCmds) */
} ManualControlCmds;

typedef struct _SpeedCmd {
    int32_t speedSetPoint;
/* @@protoc_insertion_point(struct:SpeedCmd) */
} SpeedCmd;

typedef struct _StateCmd {
    CarState setCarState;
/* @@protoc_insertion_point(struct:StateCmd) */
} StateCmd;

typedef struct _SteeringCmd {
    int32_t steeringSetPoint;
/* @@protoc_insertion_point(struct:SteeringCmd) */
} SteeringCmd;

typedef struct _WaypointCmd {
    pb_callback_t longitude;
    pb_callback_t latitude;
    int32_t sequenceNumber;
/* @@protoc_insertion_point(struct:WaypointCmd) */
} WaypointCmd;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SteeringCmd_init_default                 {0}
#define SpeedCmd_init_default                    {0}
#define WaypointCmd_init_default                 {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define BasicCmd_init_default                    {_CmdType_MIN}
#define ManualControlCmds_init_default           {0, 0, _CarState_MIN, _CmdType_MIN}
#define StateCmd_init_default                    {_CarState_MIN}
#define DebugCmd_init_default                    {0}
#define SteeringCmd_init_zero                    {0}
#define SpeedCmd_init_zero                       {0}
#define WaypointCmd_init_zero                    {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define BasicCmd_init_zero                       {_CmdType_MIN}
#define ManualControlCmds_init_zero              {0, 0, _CarState_MIN, _CmdType_MIN}
#define StateCmd_init_zero                       {_CarState_MIN}
#define DebugCmd_init_zero                       {0}

/* Field tags (for use in manual encoding/decoding) */
#define BasicCmd_basicCmd_tag                    1
#define DebugCmd_debugCmd_tag                    1
#define ManualControlCmds_steeringSetPoint_tag   1
#define ManualControlCmds_speedSetPoint_tag      2
#define ManualControlCmds_setCarState_tag        3
#define ManualControlCmds_BasicCmd_tag           4
#define SpeedCmd_speedSetPoint_tag               1
#define StateCmd_setCarState_tag                 1
#define SteeringCmd_steeringSetPoint_tag         1
#define WaypointCmd_longitude_tag                1
#define WaypointCmd_latitude_tag                 2
#define WaypointCmd_sequenceNumber_tag           3

/* Struct field encoding specification for nanopb */
extern const pb_field_t SteeringCmd_fields[2];
extern const pb_field_t SpeedCmd_fields[2];
extern const pb_field_t WaypointCmd_fields[4];
extern const pb_field_t BasicCmd_fields[2];
extern const pb_field_t ManualControlCmds_fields[5];
extern const pb_field_t StateCmd_fields[2];
extern const pb_field_t DebugCmd_fields[2];

/* Maximum encoded size of messages (where known) */
#define SteeringCmd_size                         11
#define SpeedCmd_size                            11
/* WaypointCmd_size depends on runtime parameters */
#define BasicCmd_size                            2
#define ManualControlCmds_size                   35
#define StateCmd_size                            11
#define DebugCmd_size                            11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CMDS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
