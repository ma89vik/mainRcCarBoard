# Brief: Builds firmware source generated by STM32CubeMX.
#
# Author:  Windsor Schmidt. | https://github.com/windsorschmidt
# License: MIT License. Contributions welcome.



# All relative to project root, as generated by STM32CubeMX.
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/board/Src)
set(CMSIS_DIR ${CMAKE_SOURCE_DIR}/board/Drivers/CMSIS)
set(DEVICE_DIR ${CMAKE_SOURCE_DIR}/board/Drivers/CMSIS/Device/ST/STM32F4xx)
set(HAL_DIR ${CMAKE_SOURCE_DIR}/board/Drivers/STM32F4xx_HAL_Driver)
set(RTOS_DIR ${CMAKE_SOURCE_DIR}/board/Middlewares/Third_Party/FreeRTOS/Source)

# Look here for header files.
include_directories(${CMAKE_SOURCE_DIR}/board/Inc)
include_directories(${CMSIS_DIR}/Include)
include_directories(${DEVICE_DIR}/Include)
include_directories(${HAL_DIR}/Inc)
include_directories(${RTOS_DIR}/include)
include_directories(${RTOS_DIR}/CMSIS_RTOS)
include_directories(${RTOS_DIR}/portable/GCC/ARM_CM4F)


# The linker flag --gc-section keeps unused object code here from being linked.
add_executable(${PROJ}.elf
  ${SOURCE_DIR}/main.c
  ${SOURCE_DIR}/freertos.c
  ${SOURCE_DIR}/stm32f4xx_it.c
  ${SOURCE_DIR}/stm32f4xx_hal_msp.c
  ${SOURCE_DIR}/stm32f4xx_hal_timebase_tim.c
  ${DEVICE_DIR}/Source/Templates/system_stm32f4xx.c
  ${DEVICE_DIR}/Source/Templates/gcc/startup_stm32f407xx.s
  ${HAL_DIR}/Src/stm32f4xx_hal.c
  ${HAL_DIR}/Src/stm32f4xx_hal_exti.c
  ${HAL_DIR}/Src/stm32f4xx_hal_cortex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_dma.c
  ${HAL_DIR}/Src/stm32f4xx_hal_dma_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_flash.c
  ${HAL_DIR}/Src/stm32f4xx_hal_flash_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_gpio.c
  ${HAL_DIR}/Src/stm32f4xx_hal_i2s.c
  ${HAL_DIR}/Src/stm32f4xx_hal_i2s_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_i2c.c
  ${HAL_DIR}/Src/stm32f4xx_hal_i2c_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_uart.c
  ${HAL_DIR}/Src/stm32f4xx_hal_pwr.c
  ${HAL_DIR}/Src/stm32f4xx_hal_pwr_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_rcc.c
  ${HAL_DIR}/Src/stm32f4xx_hal_rcc_ex.c
  ${HAL_DIR}/Src/stm32f4xx_hal_tim.c
  ${HAL_DIR}/Src/stm32f4xx_hal_tim_ex.c
  ${RTOS_DIR}/croutine.c 
  ${RTOS_DIR}/event_groups.c 
  ${RTOS_DIR}/list.c 
  ${RTOS_DIR}/queue.c 
  ${RTOS_DIR}/stream_buffer.c 
  ${RTOS_DIR}/tasks.c 
  ${RTOS_DIR}/timers.c 
  ${RTOS_DIR}/CMSIS_RTOS/cmsis_os.c 
  ${RTOS_DIR}/portable/MemMang/heap_4.c 
  ${RTOS_DIR}/portable/GCC/ARM_CM4F/port.c  
  )

 # Some trickery to get CMake to deal with our assembler code.
set_property(SOURCE ${DEVICE_DIR}/Source/Templates/gcc/startup_stm32f407xx.s PROPERTY LANGUAGE C)
  
# Generate assembly listing.
add_custom_command(
  TARGET ${PROJ}.elf
  COMMAND "arm-none-eabi-objdump"
  ARGS "-S" "${PROJ}.elf" ">>" "${PROJ}.lst")

# Flash firmware to target.
add_custom_target(flash
  openocd -f interface/stlink-v2-1.cfg -c "transport select hla_swd"
  -f target/stm32f4x.cfg -c "init" -c "reset halt"
  -c "flash write_image erase ${PROJ}.elf" -c "reset run" -c "shutdown"
  DEPENDS ${PROJ}.elf
  COMMENT "Flashing target hardware")

# Run OpenOCD as a GDB host.
add_custom_target(gdbhost
  openocd -f interface/stlink-v2-1.cfg -c "transport select hla_swd"
  -f target/stm32f0x.cfg -c "init" -c "reset halt"
  DEPENDS ${PROJ}.elf
  COMMENT "Running OpenOCD as a GDB host.")
