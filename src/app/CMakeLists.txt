
# HAL and drivers, generated by cubemx
add_subdirectory(board)

#add_subdirectory(Protobuf)

 list(APPEND APP_SOURCE_FILES
    main.c
    app_main.c
    app_drivers/uart/app_uart.c
    app_drivers/led/led.c
#   board.c
#   BleBoardHandler/ble_board_handler.c
#   BleBoardHandler/ble_board_message_handler.c
#   BleBoardHandler/message_parser.c
#   Cobs/cobs.c
#   Crc/crc.c
#   Control/car.c
#   Control/car_control.c
#   Control/car_interface.c
#   Control/car_state.c
#   Control/pwm.c
#   DistanceSensor/distance_sensor.c
#   Device/I2c/i2c_stm32_hal.c
#   Device/Serial/serial_stm32_hal.c
#   GPS/gps_handler.c
#   IMU/ak8963.c
#   IMU/imu_handler.c
#   IMU/mpu9250.c
#   LinearBuffer/linear_buffer.c
#   Log/log.c
#   Log/usb_log.c
#   Observer/observer.c
    RingBuffer/ring_buffer.c
 )


 list(APPEND APP_INC_FILES
#   BleBoardHandler
#   Control
#   Cobs
#   Crc
#   Device
#   Device/I2c
#   Device/Serial
#   DistanceSensor/
#   GPS
#   IMU
#   Log
#   Observer
#   LinearBuffer
   app_drivers/uart
   app_drivers/led
   error_def
   RingBuffer 
 )


set(APP_SOURCE_FILES ${APP_SOURCE_FILES})
set(APP_INC_FILES ${APP_INC_FILES})


set(LINKER_SCRIPT "${CMAKE_CURRENT_LIST_DIR}/app.ld")
get_filename_component(MEM_MAP_DIR ../ ABSOLUTE)

add_executable(${RC_CAR_CONTROL_BOARD_ELF} ${APP_SOURCE_FILES})
target_link_libraries(${RC_CAR_CONTROL_BOARD_ELF} board common "-T ${LINKER_SCRIPT}" "-L ${MEM_MAP_DIR}")
target_include_directories(${RC_CAR_CONTROL_BOARD_ELF}  PUBLIC ${APP_INC_FILES})


execute_process(COMMAND git rev-parse --short HEAD OUTPUT_VARIABLE GIT_REV OUTPUT_STRIP_TRAILING_WHITESPACE)
target_compile_definitions(${RC_CAR_CONTROL_BOARD_ELF} PRIVATE GIT_SHA="${GIT_REV}")

set(CREATE_BIN_CMD ${CMAKE_OBJCOPY} -O binary ${PROJECT_NAME}.elf ${PROJECT_NAME}.bin)

set(PRIVATE_KEY_PATH ${PROJECT_SOURCE_DIR}/src/private.pem)
set(PUBLIC_KEY_PATH ${PROJECT_SOURCE_DIR}/src/public.pem)
set(SIGN_APP_CMD ${Python3_EXECUTABLE} ${PROJECT_SOURCE_DIR}/src/app_sign.py ${PROJECT_NAME}.bin ${PUBLIC_KEY_PATH})

add_custom_command(TARGET ${PROJECT_NAME}.elf
    POST_BUILD
    COMMAND ${CREATE_BIN_CMD}
    COMMAND ${SIGN_APP_CMD}
    DEPENDS ${PROJECT_NAME}.elf)
